services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: doktolib
      POSTGRES_USER: doktolib
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d

  backend:
    build: ./backend
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://doktolib:password123@postgres:5432/doktolib
      - DB_SSL_MODE=disable
      - PORT=8080
      - GIN_MODE=debug
      # S3 Configuration (optional - for local testing with AWS)
      # - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      # - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      # - AWS_REGION=${AWS_REGION:-us-east-1}
      # - AWS_S3_BUCKET=${AWS_S3_BUCKET}
    depends_on:
      - postgres

  frontend:
    build: 
      context: ./frontend
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8080}
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8080}
    depends_on:
      - backend

  load-generator:
    build: ./load-generator
    environment:
      - API_URL=http://backend:8080
      - SCENARIO=${LOAD_SCENARIO:-normal}
      - DURATION_MINUTES=${LOAD_DURATION:-60}
      - LOG_LEVEL=${LOAD_LOG_LEVEL:-info}
    depends_on:
      - backend
    profiles:
      - loadtest

  seed-data:
    build: ./seed-data
    environment:
      - DATABASE_URL=postgres://doktolib:password123@postgres:5432/doktolib
      - DB_SSL_MODE=disable
      - DOCTOR_COUNT=${SEED_DOCTOR_COUNT:-50}
      - FORCE_SEED=${SEED_FORCE:-false}
    depends_on:
      - postgres
    profiles:
      - seed

  terraform-s3:
    build: ./terraform/s3-bucket
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - TF_VAR_bucket_name=${S3_BUCKET_NAME:-doktolib-medical-files-local}
      - TF_VAR_aws_region=${AWS_REGION:-us-east-1}
      - TF_VAR_environment=${S3_ENVIRONMENT:-development}
      - TF_VAR_allowed_origins=${S3_ALLOWED_ORIGINS:-["http://localhost:3000","http://frontend:3000"]}
    profiles:
      - terraform
      - s3-setup

volumes:
  postgres_data: