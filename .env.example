# Environment Configuration Template
# Copy this file to .env.local for local development

# =============================================================================
# FRONTEND CONFIGURATION
# =============================================================================

# Backend API URL (build-time variable for Next.js)
NEXT_PUBLIC_API_URL=http://localhost:8080

# Frontend port
PORT=3000

# Node environment
NODE_ENV=development

# =============================================================================
# BACKEND CONFIGURATION  
# =============================================================================

# Database connection
DATABASE_URL=postgres://doktolib:password123@localhost:5432/doktolib

# Database SSL configuration
DB_SSL_MODE=disable
# DB_SSL_CERT=/path/to/client-cert.pem
# DB_SSL_KEY=/path/to/client-key.pem  
# DB_SSL_ROOT_CERT=/path/to/ca-cert.pem

# Backend server port
PORT=8080

# Gin framework mode (debug/release)
GIN_MODE=debug

# =============================================================================
# AWS S3 CONFIGURATION (for file uploads)
# =============================================================================

# AWS credentials for S3 access
AWS_ACCESS_KEY_ID=your_access_key_here
AWS_SECRET_ACCESS_KEY=your_secret_key_here
AWS_REGION=us-east-1

# S3 bucket for medical file storage
AWS_S3_BUCKET=doktolib-medical-files

# S3 bucket configuration (used by Terraform)
S3_BUCKET_NAME=doktolib-medical-files
S3_ENVIRONMENT=production
S3_ALLOWED_ORIGINS=https://doktolib.com,https://app.doktolib.com

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL configuration
POSTGRES_DB=doktolib
POSTGRES_USER=doktolib
POSTGRES_PASSWORD=password123

# Seed Data Configuration
DOCTOR_COUNT=1500
FORCE_SEED=false

# =============================================================================
# LOAD GENERATOR CONFIGURATION
# =============================================================================

# Target API URL for load testing
API_URL=http://localhost:8080

# Load scenario (light/normal/heavy/stress)
SCENARIO=normal

# Test duration in minutes
DURATION_MINUTES=60

# Logging level
LOG_LEVEL=info

# =============================================================================
# DOCKER COMPOSE CONFIGURATION
# =============================================================================

# Override API URL for frontend in Docker
# NEXT_PUBLIC_API_URL=http://backend:8080

# Load test configuration
LOAD_SCENARIO=normal
LOAD_DURATION=60
LOAD_LOG_LEVEL=info

# Seed data configuration
SEED_DOCTOR_COUNT=50
SEED_FORCE=false

# =============================================================================
# PRODUCTION ENVIRONMENT EXAMPLES
# =============================================================================

# Production API URLs
# NEXT_PUBLIC_API_URL=https://api.doktolib.com
# API_URL=https://api.doktolib.com

# Production database with SSL
# DATABASE_URL=postgres://user:password@host:5432/doktolib?sslmode=require
# DB_SSL_MODE=require

# Production settings
# NODE_ENV=production
# GIN_MODE=release

# =============================================================================
# DEPLOYMENT CONFIGURATION (GitHub Actions)
# =============================================================================

# These should be set as GitHub repository secrets, not in .env files:
# QOVERY_CLI_ACCESS_TOKEN
# QOVERY_ORGANIZATION_ID
# QOVERY_PROJECT_ID
# QOVERY_ENVIRONMENT_ID
# QOVERY_BACKEND_APPLICATION_ID
# QOVERY_FRONTEND_APPLICATION_ID
# QOVERY_LOAD_GENERATOR_APPLICATION_ID
# QOVERY_TERRAFORM_JOB_ID

# AWS credentials for Qovery deployment (secrets)
# AWS_ACCESS_KEY_ID
# AWS_SECRET_ACCESS_KEY
# AWS_REGION
# AWS_S3_BUCKET

# =============================================================================
# TERRAFORM VARIABLES (for S3 bucket creation)
# =============================================================================

# Terraform variables for S3 bucket creation
# These are used by the lifecycle job to create the S3 bucket
TF_VAR_bucket_name=doktolib-medical-files
TF_VAR_aws_region=us-east-1
TF_VAR_environment=production
TF_VAR_allowed_origins=["https://doktolib.com","https://app.doktolib.com"]
# TF_VAR_app_role_arn=arn:aws:iam::123456789012:role/doktolib-app-role